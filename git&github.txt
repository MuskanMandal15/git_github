GIT
- Git is a version control system.
- It manages source code and track the history.



GITHUB
- hosting and collaboration provider.
- github allows us to bring local project from git.
   

- On MAC we have two different shells (diff text input interfaces) 
1. first one or older one - bash     
2. latest one - zsh (Z-Shell)

- ON WINDOWS
1. command prompt (cmd)- initial windows shell
2. powershell - new shell(windows 7 release)
3. git bash - bash emulations for windows

- Command line tools 
for MAC - Terminal (z-shell)
for WINDOWS - Command Prompt(cmd)

MAC: COMMAND PROMPT - USEFUL COMMANDS
1. pwd(print working directory) - pwd allows us to show that where we're currently yet.
2. ls(list items) - shows us all the list items in that folder
3. cd(change directory) - to change the current directory.
  3.1 cd/ - root directory.
  3.2 cd/users - users directory.
4. cd ~ - it shows us that now we are in home directory.
5. cd .. - coming back from that directory.
5. clear - clear all the commands from terminal.but does'nt delete the history.
6. mkdir <name of folder> - to create new folder
7. touch <name of file> - to create new file , we can also create many files by giving space between their name.
8. git r - delete file. 
9. git rmdir <name of the folder which we want to delete> - rmdir means remove empty folder.

10.these are flags that tells us additional information .
   1. ls -s - size of the file or the foler.
   2. ls -l - time and date of the file or the folder when they created.
   3. ls -ls - file size at the begining then time and date (not so helpfull).
   4. man ls - it tells us about all the flags.
11. cp - copying the file into another file by using cp <name of folder>/<name of file> <name of folder in which we wanr to copy>.
12. 

15. git branch -M main - changes the branch (default branch is master).
 15.1. git switch <name of the branch> - to switch the branch.
 15.2. git switch -c <name of the branch> - make new branch and also switched to it.
 15.3. git merge otherbranch - bring other branchs's changes to current branch.
 
16. 


19. git push origin main - pushes the file github.
20. git push -u origin main - it we use -u then we don't have to write the whole line we can  also write git push.
21. git ls-files - gives us all files that are staged.
22. git clean -dn - removes only untracked files.
  22.1. git clean -df - f means force , delete untracked files.
23. 
25. 
26. 
27.
28. 
29. 
=======================================================================================================================================================================================
-  BASICS COMMANDS SUMMARY: GENERAL
 - git --version - check installed git version.
 - git init - create empty git repo.
 - git status - check working directory and staging area status.
 - git log - display all commits fo current branch.
 - git ls-files - list data in staging area.










=======================================================================================================================================================================================
- BASICS COMMANDS SUMMARY: BRANCH CREATION & ACCESS
 - git add filename - add single file to staging area. 
 - git add . - add single or all WD files to staging area.
 - git commit -m "message" - create new commit.
 - git checkout commitid - checkout commit (detached head!).
 - git branch branchname - create new branch.
 - git switch branchname - switches the branch.
 - git checkout branchname - go to branch.
 - git checkout -b branchname , git switch -c branchname - create and access new branch.
 - git merge otherbranch - bring other branch's changes to current branch.












======================================================================================================================================================================================
- BASICS COMMANDS SUMMARY: DELETING DATA (DELETE/UNDO)
 WD File*   - git rm <name of the file which we want to delete> - rm means remove , it deleted the file , we can also remove multiple files.
            - git add <filename> - staged the file.

Unstaged Changes - git checkout (--) . - revert changes in tracked files.
                 - git restore filename or . - - revert changes in tracked files.
                 - git clean -df - delete untracked files.

Staged Changes - git reset filename & - - remove files from staging area.
               - git checkout -- filename - remove files from staging area.
               - git restore --staged filename or . - remove files from staging area.

Latest Commits - git reset HEAD~1.
               - git reset --soft HEAD~(no. of commits we want to go back) - back to the commit's number which we've typed.(it just removed the latest commit in working directory)
               - git reset --hard HEAD~(no. of commits we want to go back) - removing the changes from working directory and removing the changes from staging area

Braches - git branch -D branchname - delete branch.
====================================================================================================================================================================================








WINDOWS: COMMAND PROMPT - USEFUL COMMANDS
1. cd - print current path.
2. dir - list items.
3. cls - clear command prompt.
4. cd .. - change directory.
5. echo text > name(.type) - create file.
6. mkdir (name of folder) - createfolder.
7. del (name of file) - delete file.
8. rmdir (name of folder) - delete folder.
9. copy (name of file) - copy the file.
10. move (name of file and folder) - move file and folder.

=================================================================
Git = Tracking changes - Not storing files again and again.


